AWSTemplateFormatVersion: '2010-09-09'

Description:
 AWS ELB Resource

Parameters:
 ProjectName:
  Description: ""
  Type: String

 CertificateArn:
  Description: ""
  Type: String

Outputs:
 ApplicationLoadBalancerTargetGroup:
  Description: ""
  Value: !Ref ApplicationLoadBalancerTargetGroup
  Export:
   Name: !Sub "${ProjectName}-ApplicationLoadBalancerTargetGroup"
 ApplicationLoadBalancerDNSName:
  Description: ""
  Value: !GetAtt ApplicationLoadBalancer.DNSName
  Export:
   Name: !Sub "${ProjectName}-ALBDNSName"
 ApplicationLoadBalancerCanonicalHostedZoneID:
  Description: ""
  Value: !GetAtt ApplicationLoadBalancer.CanonicalHostedZoneID
  Export:
   Name: !Sub "${ProjectName}-ALBCanonicalHostedZoneID"

Resources:
 ApplicationLoadBalancer:
  Type: AWS::ElasticLoadBalancingV2::LoadBalancer
  Properties:
   Scheme: internet-facing
   SecurityGroups:
    - { "Fn::ImportValue": !Sub "${ProjectName}-FrontendSecurityGroup" }
   Subnets:
    - { "Fn::ImportValue": !Sub "${ProjectName}-PublicSubnetA" }
    - { "Fn::ImportValue": !Sub "${ProjectName}-PublicSubnetC" }
   Tags:
    - Key: Name
      Value: !Sub "${ProjectName}"

 ApplicationLoadBalancerListener:
  Type: AWS::ElasticLoadBalancingV2::Listener
  Properties:
   LoadBalancerArn: !Ref ApplicationLoadBalancer
   Port: "80"
   Protocol: "HTTP"
   DefaultActions:
    - TargetGroupArn: !Ref ApplicationLoadBalancerTargetGroup
      Type: forward

 ApplicationLoadBalancerListenerSSL:
  Type: AWS::ElasticLoadBalancingV2::Listener
  Properties:
   LoadBalancerArn: !Ref ApplicationLoadBalancer
   Port: "443"
   Protocol: "HTTPS"
   Certificates:
    - CertificateArn: !Ref CertificateArn
   DefaultActions:
    - TargetGroupArn: !Ref ApplicationLoadBalancerTargetGroup
      Type: forward

 ApplicationLoadBalancerTargetGroup:
  Type: AWS::ElasticLoadBalancingV2::TargetGroup
  Properties:
   Port: "80"
   Protocol: "HTTP"
   VpcId: { "Fn::ImportValue": !Sub "${ProjectName}-VPC" }
   Tags:
    - Key: Name
      Value: !Sub "${ProjectName}"
