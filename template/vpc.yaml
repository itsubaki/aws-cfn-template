AWSTemplateFormatVersion: '2010-09-09'

Description:
 AWS VPC Resource

Parameters:
 ProjectName:
  Description: ""
  Type: String
  Default: Dev

 CidrBlockVPC:
  Description: ""
  Type: String
  Default: 10.0.0.0/16

 CidrBlockPublicSubnetA:
  Description: ""
  Type: String
  Default: 10.0.0.0/27

 CidrBlockPublicSubnetC:
  Description: ""
  Type: String
  Default: 10.0.0.32/27

 CidrBlockPrivateSubnetA:
  Description: ""
  Type: String
  Default: 10.0.0.64/27

 CidrBlockPrivateSubnetC:
  Description: ""
  Type: String
  Default: 10.0.0.96/27

Outputs:
 ProjectName:
  Value: !Ref ProjectName
  Export:
   Name: !Ref ProjectName
 VPC:
   Value: !Ref VPC
   Export:
    Name: !Sub "${ProjectName}-VPC"
 PublicRouteTable:
   Value: !Ref PublicRouteTable
   Export:
    Name: !Sub "${ProjectName}-PublicRouteTable"
 PrivateRouteTable:
   Value: !Ref PrivateRouteTable
   Export:
    Name: !Sub "${ProjectName}-PrivateRouteTable"
 PublicSubnetA:
   Value: !Ref PublicSubnetA
   Export:
    Name: !Sub "${ProjectName}-PublicSubnetA"
 PublicSubnetC:
   Value: !Ref PublicSubnetC
   Export:
    Name: !Sub "${ProjectName}-PublicSubnetC"
 PrivateSubnetA:
   Value: !Ref PrivateSubnetA
   Export:
    Name: !Sub "${ProjectName}-PrivateSubnetA"
 PrivateSubnetC:
   Value: !Ref PrivateSubnetC
   Export:
    Name: !Sub "${ProjectName}-PrivateSubnetC"


Resources:
 VPC:
  Type: AWS::EC2::VPC
  Properties:
   CidrBlock: !Ref CidrBlockVPC
   EnableDnsSupport: "true"
   EnableDnsHostnames: "true"
   InstanceTenancy: default
   Tags:
    - Key: Name
      Value: !Sub "${ProjectName}"

 PublicRouteTable:
  Type: AWS::EC2::RouteTable
  Properties:
   VpcId: !Ref VPC
   Tags:
    - Key: Name
      Value: !Sub "${ProjectName}"

 PrivateRouteTable:
  Type: AWS::EC2::RouteTable
  Properties:
   VpcId: !Ref VPC
   Tags:
    - Key: Name
      Value: !Sub "${ProjectName}"

 PublicSubnetA:
  Type: AWS::EC2::Subnet
  Properties:
   VpcId: !Ref VPC
   CidrBlock: !Ref CidrBlockPublicSubnetA
   AvailabilityZone: !Select [ "0", !GetAZs ""]
   MapPublicIpOnLaunch: true
   Tags:
    - Key: Name
      Value: !Sub "${ProjectName}"
 PublicSubnetARouteTableAssociation:
  Type: AWS::EC2::SubnetRouteTableAssociation
  Properties:
   SubnetId: !Ref PublicSubnetA
   RouteTableId: !Ref PublicRouteTable

 PublicSubnetC:
  Type: AWS::EC2::Subnet
  Properties:
   VpcId: !Ref VPC
   CidrBlock: !Ref CidrBlockPublicSubnetC
   AvailabilityZone: !Select [ "1", !GetAZs ""]
   MapPublicIpOnLaunch: true
   Tags:
    - Key: Name
      Value: !Sub "${ProjectName}"
 PublicSubnetCRouteTableAssociation:
  Type: AWS::EC2::SubnetRouteTableAssociation
  Properties:
   SubnetId: !Ref PublicSubnetC
   RouteTableId: !Ref PublicRouteTable

 PrivateSubnetA:
  Type: AWS::EC2::Subnet
  Properties:
   VpcId: !Ref VPC
   CidrBlock: !Ref CidrBlockPrivateSubnetA
   AvailabilityZone: !Select [ "0", !GetAZs ""]
   Tags:
    - Key: Name
      Value: !Sub "${ProjectName}"
 PrivateSubnetARouteTableAssociation:
  Type: AWS::EC2::SubnetRouteTableAssociation
  Properties:
   SubnetId: !Ref PrivateSubnetA
   RouteTableId: !Ref PrivateRouteTable

 PrivateSubnetC:
  Type: AWS::EC2::Subnet
  Properties:
   VpcId: !Ref VPC
   CidrBlock: !Ref CidrBlockPrivateSubnetC
   AvailabilityZone: !Select [ "1", !GetAZs ""]
   Tags:
    - Key: Name
      Value: !Sub "${ProjectName}"
 PrivateSubnetCRouteTableAssociation:
  Type: AWS::EC2::SubnetRouteTableAssociation
  Properties:
   SubnetId: !Ref PrivateSubnetC
   RouteTableId: !Ref PrivateRouteTable

 InternetGateway:
  Type: AWS::EC2::InternetGateway
  Properties:
   Tags:
    - Key: Name
      Value: !Sub "${ProjectName}"

 AttachGateway:
  Type: AWS::EC2::VPCGatewayAttachment
  Properties:
   InternetGatewayId: !Ref InternetGateway
   VpcId: !Ref VPC

 Route:
  Type: AWS::EC2::Route
  Properties:
   RouteTableId: !Ref PublicRouteTable
   DestinationCidrBlock: 0.0.0.0/0
   GatewayId: !Ref InternetGateway
